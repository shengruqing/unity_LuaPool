---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 123.
--- DateTime: 2023/3/30 3:53
---
require "core.pool.objectpoolcontainer"
ObjectPool = {}

function ObjectPool:new(returnT)
    local o = {};
    setmetatable(o, self);
    self.__index = self;
    ---未使用对象列表
    o.UnUseList = {}
    ---正在使用的对象字典
    o.UserDict = {}
    ---返回指定对象
    o._returnT = returnT
    ---默认保持池子内数量 负数不保持
    o.HoldObject = -1
    ---池子Name
    o.PoolName = ""
    return o
end

function ObjectPool:createContainer()
    local container = ObjectPoolContainer:new()
    container:SetItem(self._returnT())
    table.insert(self.UnUseList, container)
    return container
end

---从池子中取出对象
function ObjectPool:Get()
    local container = nil
    if #self.UnUseList > 0 then
        container = self.UnUseList[1]
    else
        container = self:createContainer()
    end
    container:Consume()
    table.remove(self.UnUseList, 1)
    self.UserDict[container:GetItem()] = container
    return container:GetItem()
end

---释放对象
function ObjectPool:release(item)
    if self.UserDict[item] ~= nil then
        local container = self.UserDict[item]
        container:Release()
        self.UserDict[item] = nil
        table.insert(self.UnUseList, container)
    else
        print("这池子中不存在包含 " .. item .. " 的容器！")
    end
end
